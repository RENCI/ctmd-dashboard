version: "3"

services:
  redis:
    container_name: ctmd-redis
    build:
      context: ./redis/
      dockerfile: Dockerfile
    restart: always
    environment: {}
    volumes:
      - ./redis/data/:/data
    expose:
      - 6379
    command: ["--appendonly", "yes"]

  pipeline:
    container_name: ctmd-pipeline
    image: txscience/ctmd-pipeline-reload:v2.0
    restart: always
    environment:
      POSTGRES_DATABASE_NAME: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_HOST: db
      REDCAP_APPLICATION_TOKEN: $REDCAP_APPLICATION_TOKEN
      REDCAP_URL_BASE: "https://redcap.vanderbilt.edu/api/"
      POSTGRES_DUMP_PATH: /backup
      AUXILIARY_PATH: /auxiliary
      FILTER_PATH: /filter
      BLOCK_PATH: /block
      RELOAD_SCHEDULE: $RELOAD_SCHEDULE
      RELOAD_DATABASE: $RELOAD_DATABASE
      SCHEDULE_RUN_TIME: $SCHEDULE_RUN_TIME
      SERVER: 1
      REDIS_QUEUE_HOST: redis
      REDIS_QUEUE_PORT: 6379
      REDIS_QUEUE_DB: 0
      REDIS_LOCK_HOST: redis
      REDIS_LOCK_PORT: 6379
      REDIS_LOCK_DB: 1
      REDIS_LOCK_EXPIRE: 28800
      REDIS_LOCK_TIMEOUT: 28800
      TASK_TIME: 28800
      SPARK_EXECUTOR_MEMORY: 8g
      SPARK_DRIVER_MEMORY: 8g
      PAUSE: $PAUSE
      DATA_INPUT_FILE_PATH: $DATA_INPUT_FILE_PATH
      DOWNLOAD_REDCAP_DATA: $DOWNLOAD_REDCAP_DATA
    volumes:
      - $POSTGRES_DUMP_PATH:/backup
      - $AUXILIARY_PATH:/auxiliary
      - $FILTER_PATH:/filter
      - $BLOCK_PATH:/block
      - $MAPPING_LOCAL_PATH:/mapping.json
      - ./syntheticDataset.json:$DATA_INPUT_FILE_PATH
    depends_on:
      - db
      - redis
    expose:
      - 5000

  db:
    container_name: ctmd-db
    restart: always
    build:
      context: ./db/
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_PORT: $POSTGRES_PORT
    volumes:
      - ./db/data:/var/lib/postgresql/data
    expose:
      - $POSTGRES_PORT

  api:
    container_name: ctmd-api
    build:
      context: ./api/
      dockerfile: Dockerfile
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules/
    ports:
      - $API_PORT:$API_PORT
    environment:
      AUTH_ENV: production
      NODE_ENV: production
      API_PORT: $API_PORT
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_PORT: $POSTGRES_PORT
      FUSE_AUTH_API_KEY: $FUSE_AUTH_API_KEY
      DASHBOARD_URL: $DASHBOARD_URL
      API_SESSION_SECRET: $API_SESSION_SECRET
      REACT_APP_API_ROOT: $REACT_APP_API_ROOT
      AUTH_URL: $AUTH_URL
      IS_HEAL_SERVER: $IS_HEAL_SERVER
    depends_on:
      - db
    restart: always

  frontend:
    container_name: ctmd-frontend
    build:
      args:
        NODE_ENV: production
        REACT_APP_API_ROOT: $REACT_APP_API_ROOT
        REACT_APP_DATA_API_ROOT: $REACT_APP_DATA_API_ROOT
      context: ./frontend/
      dockerfile: Dockerfile-prod
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/.htpasswd:/etc/nginx/.htpasswd
    ports:
      - 80:80
    depends_on:
      - api
      - pipeline
    restart: always

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${IPAM_CONFIG_SUBNET}
