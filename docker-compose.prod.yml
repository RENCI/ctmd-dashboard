version: '3'

services:
  db:
    container_name: postgres
    restart: always
    build:
      context: ./db/
      dockerfile: Dockerfile
    volumes:
      - ./db/pgdata/:/var/lib/postgresql/data/
      - ./db/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - ./db/duketic.sql:/data/duketic.sql
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_PORT: $POSTGRES_PORT
    expose:
      - $POSTGRES_PORT

  api:
    container_name: node
    build:
      context: ./api/
      dockerfile: Dockerfile
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules/
    ports:
      - $API_PORT:$API_PORT
    environment:
      NODE_ENV: production
      API_PORT: $API_PORT
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_PORT: $POSTGRES_PORT
    depends_on:
      - db

  frontend:
    container_name: react
    build:
      context: ./frontend/
      dockerfile: Dockerfile-prod
      args:
        NODE_ENV: production
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/.htpasswd:/etc/nginx/.htpasswd
    environment:
      NODE_ENV: production
    ports:
      - 80:80
    depends_on:
      - api
