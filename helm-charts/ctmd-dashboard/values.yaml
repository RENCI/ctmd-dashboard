# Default values for ctmd-dashboard. This is the parent chart to launch
# the full service. 
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/

# TODO (Phase 2): postgres currently creates a pvc upon creation- this should
#           extend to mount an existing pvc if already created.
#

images:
  repository: containers.renci.org/ctmd
  tag: "latest"

serviceAccounts:
  create: false
  annotations: {}
  
networkPolicies:
  create: false 

securityContext:
  enable: false 

frontend:
  create: true 
  name: ctmd-frontend
  # The ports are informational values and 
  # not used to change templates currently.
  service:
    type: ClusterIP
    port: 3000
    name: http
  resources:
    requests:
      cpu: 
      memory: 
    limits:
      cpu: 
      memory:

api:
  create: true
  name: ctmd-api
  # The ports are informational values and 
  # not used to change templates currently.
  service:
    apiPort: 3030
    graphicsApiPort: 4040
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 300Mi
  # The below section will be environment vars in the application.
  env:
    # "development" or "production" same value as nodeEnvironment
    authEnvironment: "development"
    nodeEnvironment: "development"
    dashboardURL: "http://localhost:3000"
    reactAppAPIRoot: http://localhost/api/
    fuseAuthAPIKey: "SECRET"
    apiSessionSecret: "SECRET"
    authURL: "https://some-auth-url.com"

postgres:
  create: true
  name: ctmd-db
  # Will use a public docker image of postgres, otherwise uses images.repository/postgres.name.
  publicRepository: true
  # The ports are informational values and 
  # not used to change templates currently.
  service:
    port: 5432
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 300Mi
# This will create a secret object that is used to populate 
# environment variables with DSN information.
  dsnSecrets:
    create: true
    name: "db-dsn"
    database: "postgres" 
    user: "ctmd-user"
    password: "password123"
  persistence:
    # To use the default provisioner leave storageClass blank.
    storageClass: ""
    # To use default of 1Gi (dev mode) leave blank.
    size: "1Gi"
    

redis:
  create: true
  name: ctmd-redis
  # Will use a public docker image of redis, otherwise uses images.repository/redis.name.
  publicRepository: true
  # The ports are informational values and 
  # not used to change templates currently.
  service:
    port: 6379
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 300Mi

pipeline:
  create: true
  name: ctmd-pipeline
  # The ports are informational values and 
  # not used to change templates currently.
  service:
    port: 5000
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 300Mi