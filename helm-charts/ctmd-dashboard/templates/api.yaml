{{- if not .Values.api.sessionSecret.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.api.sessionSecret.name }}
  labels:
    app: {{ .Values.api.name }}
  annotations:
    # Keep secret across helm upgrades to preserve sessions
    "helm.sh/resource-policy": keep
type: Opaque
data:
  {{- if .Values.api.sessionSecret.value }}
  # Use explicitly provided secret value
  session-secret: {{ .Values.api.sessionSecret.value | b64enc | quote }}
  {{- else }}
  # Auto-generate a random 32-character secret on first install
  session-secret: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.api.name }}
  name: {{ .Values.api.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.api.name }}
  strategy: {}  # Optional, can be removed if not needed
  template:
    metadata:
      labels:
        app: {{ .Values.api.name }}
    spec:
      # Wait for PostgreSQL to be ready to accept connections
      # Uses netcat (nc) to test TCP connectivity to postgres port
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.36
        command:
          - 'sh'
          - '-c'
          - |
            until nc -z {{ .Values.postgres.name }} {{ .Values.postgres.port | default 5432 }}; do
              echo "Waiting for postgres at {{ .Values.postgres.name }}:{{ .Values.postgres.port | default 5432 }}..."
              sleep 2
            done
            echo "PostgreSQL is ready!"
      containers:
        - image: "{{ .Values.images.repository }}/{{ .Values.api.name }}:{{ .Values.api.tag | default .Chart.AppVersion }}"
          name: {{ .Values.api.name }}
          ports:
            - containerPort: 3030
              # name: api
            # - containerPort: 4040
            #   name: graphics-api
          env:
            {{- if (eq (lower .Values.softwareContext) "development") }}
            - name: AUTH_ENV
              value: "development"
            {{- else }}
            - name: AUTH_ENV
              value: "production"
            {{- end }}
            - name: DASHBOARD_URL
              value: {{ .Values.api.env.DASHBOARD_URL | quote }}
            - name: API_SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.api.sessionSecret.existingSecret | default .Values.api.sessionSecret.name }}
                  key: session-secret
            - name: REDCAP_AUTH_URL
              value: {{ .Values.api.env.REDCAP_AUTH_URL | quote }}
          envFrom:
            - secretRef:
                name: {{ .Values.postgres.secrets.name }}
          resources: {} 
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ .Values.api.name }}
  name: {{ .Values.api.name }}
spec:
  ports:
  - port: {{ .Values.api.service.apiPort }}
    protocol: TCP
    targetPort: {{ .Values.api.service.apiPort }}
    # - port: 4040
    #   protocol: TCP
    #   targetPort: 4040
    #   name: graphics-api
  selector:
    app: {{ .Values.api.name }}



