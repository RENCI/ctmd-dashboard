apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.api.name }}
  name: {{ .Values.api.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.api.name }}
  strategy: {}  # Optional, can be removed if not needed
  template:
    metadata:
      labels:
        app: {{ .Values.api.name }}
    spec:
      # TODO: Add initContainer to ensure db is up.
      containers:
        - image: "{{ .Values.images.repository }}/{{ .Values.api.name }}:{{ .Values.images.tag | default .Chart.AppVersion }}"
          name: {{ .Values.api.name }}
          ports:
            - containerPort: 3030
              name: api
            - containerPort: 4040
              name: graphics-api
          env:
            - name: AUTH_ENV
              value: {{ .Values.api.env.authEnvironment | quote }}
            - name: FUSE_AUTH_API_KEY
              value: {{ .Values.api.env.fuseAuthAPIKey | quote }}
            - name: DASHBOARD_URL
              value: {{ .Values.api.env.dashboardURL | quote }}
            - name: REACT_APP_API_ROOT
              value: {{ .Values.api.env.reactAppAPIRoot | quote }}
            - name: NODE_ENV
              value: {{ .Values.api.env.nodeEnvironment | quote }}
            - name: API_SESSION_SECRET  # Fixed environment variable name
              value: {{ .Values.api.env.apiSessionSecret | quote }}
            - name: AUTH_URL
              value: {{ .Values.api.env.authURL | quote }}
          envFrom:
            - secretRef:
                name: {{ .Values.postgres.dsnSecrets.name }}
      resources: {}  # Optional, can be removed if not needed

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ .Values.api.name }}
  name: {{ .Values.api.name }}
spec:
  ports:
    - port: 3030
      protocol: TCP
      targetPort: 3030
      name: api
    - port: 4040
      protocol: TCP
      targetPort: 4040
      name: graphics-api
  selector:
    app: {{ .Values.api.name }}
status:
  loadBalancer: {}


